NODE.JS setup in the system:
1. Originally, after installing node.js from the browser - you have to globally initilize to access the node and npm in your system.
    Command is as follows:
            npm install create-react-app --global
2. To check the version of node and npm 
    Command is as follows: 
            node -v
            npm -v
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Bank Server Setup 

1. Folder structure -> 
    # config - database connections and configuration [setup] -->
    # app.js file - The app.js file is the central hub where the entire application is initialized. It sets up Express, connects the routes, loads middleware, and may also connect to the database.
    # .env file - stores all the enviornment variables - port, api key, mongo url etc

    # Client Request: A client sends an HTTP request (e.g., GET /users).
    # routes - The request hits the appropriate route defined in the routes/ directory.
    # middleware - If any middleware is associated (e.g., authentication or logging), it processes the request.
    # controllers - The controller handles the business logic. It may interact with models to fetch or modify data.
    # models - The models interact with the database to retrieve or persist data.
    # library - helpers & utilities [eg: nodeMailer] - If any utility functions are needed (e.g., sending emails, logging), they are called from the library/.
    # Response: The controller returns the final response (e.g., JSON) to the client, ending the request-response cycle.

2. Data Flow of Backend ->
    routes -->  middleware --> controllers --> models --> library --> app.js

3. packages installed -> 
    # npm - node package manager is used to install external packages

    # npm init -y [configuration file is installed - package.json] ->
        add in package.json -  "start":"npm start"
    # npm i express 
    # npm i mongoose 
    # npm i nodemon 
    
4.  Banking System 
    # MVC Structure -> 
    # authentication, authorization with email and phone 
    # mongo connect
    # Schema -> user, transaction 
    # Create account -> 
        multer for photo
        personal details submit
        password in hash algo
    # account number generate -> randomly generate (11 digits)
    # set pin -> 4 digit
    # options -> user/ -> route
        deposit money + pin
        withdraw money + pin 
        transfer + pin 
        view balance + pin 
        view account details + pin 
        mini statements -> details of transition history + pin
    # login -> account number, mobile number, email -> pin 

6. techonologies -> express, node js, mongodb
7. pacakges installed -> npm i mongoose express nodemon dotenv multer cors
8. Logic ->
    Schema -> user
    fields -> First name, last name, Phone number, email,state, city, pinCode, Address, Password, Account number, DigitalPin, balance, Profile photo
    Routes -> user
    Register route , Login route, Pin setup - 4 digits , deposit money + pin, withdraw money + pin, transfer + pin , view balance + pin , view user details + pin , mini statements -> details of transition history + pin


// deposit money + pin

// withdraw money + pin

// transfer + pin

// view balance + pin

// view user details + pin

// mini statements -> details of transition history + pin
